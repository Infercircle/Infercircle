generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model TwitterUser {
  username  String   @id
  name      String?
  url       String
  createdAt DateTime @default(now())
}

model EliteCurator {
  id             Int       @id @default(autoincrement())
  twitterId      String    @unique @map("twitter_id") @db.VarChar(32)
  username       String    @unique @db.VarChar(64)
  twitterScore   Float?    @map("twitter_score")
  tags           Json?
  categories     Json?
  subscribedAt   DateTime? @map("subscribed_at") @db.Timestamp(6)
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  followersCount Int?      @map("followers_count")

  @@map("elite_curators")
}

model TopEliteCurators {
  id        Int      @id @default(autoincrement())
  twitterId String   @unique @map("twitter_id") @db.VarChar(32)
  username  String   @unique @db.VarChar(64)
  processed Boolean? @default(false)

  @@map("top_elite_curators")
}

model wallets {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String
  type       String
  address    String
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@unique([user_id, type, address])
  @@index([user_id], map: "idx_wallets_user_id")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  image          String?
  username       String?   @unique
  followersCount Int?
}
