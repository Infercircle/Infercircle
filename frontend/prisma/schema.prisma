generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model EliteCurator {
  id             Int       @id @default(autoincrement())
  twitterId      String    @unique @map("twitter_id") @db.VarChar(32)
  username       String    @unique @db.VarChar(64)
  twitterScore   Float?    @map("twitter_score")
  tags           Json?
  categories     Json?
  subscribedAt   DateTime? @map("subscribed_at") @db.Timestamp(6)
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  followersCount Int?      @map("followers_count")

  @@map("elite_curators")
}

model TopEliteCurators {
  id        Int      @id @default(autoincrement())
  twitterId String   @unique @map("twitter_id") @db.VarChar(32)
  username  String   @unique @db.VarChar(64)
  processed Boolean? @default(false)

  @@map("top_elite_curators")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  image          String?
  username       String?   @unique
  followersCount Int?
  inviteAccepted Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now())
  twitterId      String?   @unique 

  wallets        UserWallet[]  @relation("UserWallets")
}

model UserWallet {
  id             String        @id @default(cuid())
  walletAddress  String
  chain          String
  createdAt      DateTime      @default(now())

  users          User[]        @relation("UserWallets")
}

model InviteCode {
  InviteCode  String  @id
  email       String?
  username    String?
  used        Boolean @default(false)
}
